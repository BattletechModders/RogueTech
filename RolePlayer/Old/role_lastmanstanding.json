{
	"behaviorVariables": [
		{
			/* How much accuracy (0.0 - 1.0) is required to consider
	       an attack that will overheat */
			"k": "Float_AccuracyNeededForOverheatAttack",
			"v": {
				"type": "Float",
				"floatVal": 0.55
			}
		},
		{
			/* How much a location must be damaged before an overheat
	       attack will be considered, as a fraction from 0.0
	       (undamaged) to 1.0 (location destroyed) */
			"k": "Float_ExistingTargetDamageForOverheatAttack",
			"v": {
				"type": "Float",
				"floatVal": 0.3
			}
		},
		{
			/* Maximum leg damage allowed for DFA attack (above which
	       attacks will not be considered), as a fraction from 0.0
	       (undamaged) to 1.0 (location destroyed) */
			"k": "Float_OwnMaxLegDamageForDFAAttack",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		},
		{
			/* The number of hostiles considered when evaluating
	       influence maps. */
			"k": "Int_HostileInfluenceCount",
			"v": {
				"type": "Int",
				"intVal": 1
			}
		},
		{
			/* The number of allies considered when evaluating
	       influence maps. */
			"k": "Int_AllyInfluenceCount",
			"v": {
				"type": "Int",
				"intVal": 0
			}
		},
		{
			/* When attacking a priority target, do not attack the
	       priority targe if targeted within the recent target
	       threshold number of phases. */
			"k": "Int_RecentTargetThresholdPhases",
			"v": {
				"type": "Int",
				"intVal": 1
			}
		},
		{
			/* The "To Hit" threshold to use when attacking preferred
	     * targets */
			"k": "Float_PreferredTargetToHitThreshold",
			"v": {
				"type": "Float",
				"floatVal": 0.15
			}
		},
		{
			/* How much heat is acceptable before being subject to "overheat" logic.
	       0: no heat
	       1: Heat level 1 (unused?)
	       2: Heat level 2
	       3: Max heat */
			"k": "Float_AcceptableHeatLevel",
			"v": {
				"type": "Float",
				"floatVal": 3.5
			}
		},
		{
			/* When considering different kinds of attacks, multiply
	       the shooting damage by this value to decide which
	       attack to use. */
			"k": "Float_ShootingDamageMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 3.0
			}
		},
		{
			/* When considering different kinds of attacks, multiply
	       the melee damage by this value to decide which attack
	       to use. */
			"k": "Float_MeleeDamageMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 1.5
			}
		},
		{
			/* When considering a melee attack against an unsteady
	       target, multiply the melee damage by this value to
	       decide which attack to use. This is in addition to the
	       base melee multiplier, above. */
			"k": "Float_MeleeVsUnsteadyTargetDamageMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 2.9
			}
		},
		{
			/* When considering different kinds of attacks, multiply
	       the DFA damage by this value to decide which attack to
	       use. */
			"k": "Float_DFADamageMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 2.8
			}
		},
		{
			/* Influence Factor Weight to control the desire to attack
	       a hostile's weak armor. */
			"k": "Float_PreferAttackingLowerArmorHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 1.5
			}
		},
		{
			/* Ratio between hostile's expected damage and my hit points to
	       be used for "Threat" threat sorting. */
			"k": "Float_ThreatDamageRatioThreshold",
			"v": {
				"type": "Float",
				"floatVal": 0.6
			}
		},
		{
			/* Ratio between expected damage and target hit points to
	       be used for "Vulnerable" threat sorting. */
			"k": "Float_VulnerableDamageRatioThreshold",
			"v": {
				"type": "Float",
				"floatVal": 0.6
			}
		},
		{
			/* If a target is a melee revenge target, but the ratio of
	       its expected melee damage to my expected melee damage
	       is higher than this threshold, DO NOT MELEE! It'll all
	       end in tears! */
			"k": "Float_MeleeDamageRatioCap",
			"v": {
				"type": "Float",
				"floatVal": 10
			}
		},
		{
			/* Multiplier for how 'strong' each point of head armor is
	       when looking for weak armor. */
			"k": "Float_HeadArmorMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 1.0
			}
		},
		{
			/* Multiplier for how 'strong' each point of center torso
	       front armor is when looking for weak armor. */
			"k": "Float_CenterTorsoArmorMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 0.3
			}
		},
		{
			/* Multiplier for how 'strong' each point of center torso
	       rear armor is when looking for weak armor. */
			"k": "Float_CenterTorsoRearArmorMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		},
		{
			/* Multiplier for how 'strong' each point of center torso
	       rear armor is when looking for weak armor *for rear arc
	       influence factor*. */
			"k": "Float_CenterTorsoRearArmorMultiplierForRearArc",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		},
		{
			/* Multiplier for how 'strong' each point of leg armor is
	       when looking for weak armor on a legged mech. */
			"k": "Float_RemainingLegArmorMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 0.2
			}
		}
	]
}