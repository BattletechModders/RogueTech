{
  "ShowLoadingScreenErrors": true,
  "ShowLoadingScreenErrors_Description": "TODO",
  "ShowErrorPopup": true,
  "ShowErrorPopup_Description": "TODO",
  "UseErrorWhiteList": true,
  "UseErrorWhiteList_Description": "TODO",
  "ErrorWhitelist": [
    "Data.DataManager [ERROR] ManifestEntry is null"
  ],
  "SearchModsInSubDirectories": true,
  "SearchModsInSubDirectories_Description": "Searches recursively all directories for mod.json instead only for directories directly found under Mods. Set to false for pre v2.0 behavior.",
  "ImplicitManifestShouldMergeJSON": true,
  "ImplicitManifestShouldMergeJSON_Description": "How JSONs in a mods implicit manifest (StreamingAssets) are being treated.",
  "ImplicitManifestShouldAppendText": false,
  "ImplicitManifestShouldAppendText_Description": "How CSVs in a mods implicit manifest (StreamingAssets) are being treated.",
  "ReplaceResetsMerges": true,
  "ReplaceResetsMerges_Description": "If enabled, once a manifest entry gets replaced, all previously queued merges will not apply.",
  "NormalizeCsvIfAppending": true,
  "NormalizeCsvIfAppending_Description": "Normalize CSV files when merging/appending. Filters out empty lines and adds newlines where appropiate. Duplicate title detection and removal from appending files.",
  "DataManagerUnfreezeDelta": 2.0,
  "DataManagerUnfreezeDelta_Description": "How often to refresh the UI during loading. Does this by skipping loads every specified amount of seconds.",
  "DataManagerEverSpinnyDetectionTimespan": 30.0,
  "DataManagerEverSpinnyDetectionTimespan_Description": "How long data is not being further processed until it is assumed to be stuck for good. Upon detection it dumps lots of data into the log, but nothing more.",
  "DelayPrewarmToMainMenu": true,
  "DelayPrewarmToMainMenu_Description": "Delays executing prewarm requests until entering the main menu and dlc packs are loaded. Prevents choppy intro video and makes sure to include dlc items during prewarm.",
  "ShowDataManagerStatsInLoadingCurtain": true,
  "ShowDataManagerStatsInLoadingCurtain_Description": "Adds DataManager stats when showing a loading curtain.",
  "BlockedMods": [
    "FYLS"
  ],
  "BlockedMods_Description": "Mods that should not be allowed to load. Useful in cases where those mods would (newly) interfere with ModTek.",
  "IgnoreMissingMods": [
    "FYLS"
  ],
  "IgnoreMissingMods_Description": "Ignore the dependency requirement of mods that depend on the listed mods. Useful if e.g. ModTek provides the same functionality as the ignored mods.",
  "AssembliesToPreload": [
    "RogueTechPerfFix/RogueTechPerfFixes.dll"
  ],
  "AssembliesToPreload_Description": "A list of assemblies to preload before ModTek starts harmony patching. Useful for mods that modify the assembly directly and introduce dependencies not found in the default assembly search path of the game. Path is relative to the Mods/ directory",
  "Logging": {
    "PrefixesToIgnore": [
      "ModTek",
      "Unity [ERROR] Desired shader compiler platform",
      "Unity [LOG] Look rotation viewing vector is zero",
      "Unity [ERROR] Material doesn't have a color property",
      "Unity [WARNING] Parent of RectTransform is being set with parent property",
      "Unity [WARNING] The referenced script",
      "Unity [WARNING] Rejecting unit",
      "Unity [WARNING] Parent of RectTransform is being set with parent property",
      "Unity [WARNING] No DefaultCombatLeaderCastDefId specified for faction [Player1sMercUnit]",
      "Unity [WARNING] No DefaultCombatLeaderCastDefId specified for faction [Player2sMercUnit]",
      "Unity [ERROR] Bones do not match bindpose.",
      "Unity [ERROR] ================== ERROR! Found missing transforms",
      "Unity [WARNING] ERROR! Couldn't auto-setup",
      "Unity [WARNING] Could not retrieve member",
      "MapExport [ERROR] Out of bounds",
      "CombatLog.Hit [LOG] ???????? DIRECTION:",
      "Unity [WARNING] BoxColliders does not support negative scale or size",
      "AudioEvents [DEBUG] Audio Engine",
      "MechEngineer [LOG] Auto fixing chassisDef",
      "AudioEvents [DEBUG] OnApplicationFocus",
      "NetworkRandomValues [DEBUG] Seed",
      "NetworkRandomCallstacks [DEBUG] Seed",
      "UserSettings [DEBUG] Using existing cloud settings from save manager",
      "BattleTech.Services [DEBUG] [BattleTechParadoxAPI]",
      "Network.Client [LOG] Connection",
      "GameInfo [LOG] DEVELOPMENT FLAG NOT SET",
      "MechEngineer [LOG] settings loaded",
      "GameInfo [LOG] ProductName: BATTLETECH",
      "GameInfo [LOG] RELEASE FLAG SET",
      "DebugBridge",
      "CustomComponents [LOG] [CC]SimpleCustom",
      "LoginManager [LOG] Successfully authenticated with OPS. Moving onto ComStar connection proper.",
      "Data.AssetBundleManager [LOG] Trying to load AssetBundle:",
      "UserSettings [LOG] [LOG] User settings saved",
      "MechLab [WARNING] GetWeaponPrefabName failed to find a prefab name for unit",
      "Analytics [WARNING] Analytics Event requested with invalid IP",
      "Analytics [WARNING] Request next called but no servers have been found",
      "Analytics [WARNING] Request next called but reporting is disabled",
      "UI [WARNING] Singleton UIManagerFader",
      "CombatLog.Initialization [WARNING] Turret",
      "MechEngineer [WARNING] Unsupported weapon category for 667",
      "MechEngineer [WARNING] Unsupported weapon category for 666",
      "CustomComponents [DEBUG] [CC]Mech validation for NULL return",
      "CustomComponents [DEBUG] [CC]-- CustomComponents.Flags",
      "CustomComponents [DEBUG] [CC]-- CustomComponents.AutoLinked",
      "Data.DataManager [WARNING] LoadRequest for",
      "LewdableTanks [DEBUG] [LTMod]Fixing cost of",
      "CombatLog.Initialization [ERROR] Error instantiating VFX",
      "PilotDef [WARNING] PilotDef already did Init From Save!",
      "Achievements [LOG]"
    ],
    "PrefixesToIgnore_Description": "Ignore any lines starting with any of the listed prefixes.",
    "PreserveFullLog": true,
    "PreserveFullLog_Description": "Preserve a complete log where prefixes are not ignored.",
    "LogUncaughtExceptions": false,
    "LogUncaughtExceptions_Description": "Logs uncaught exceptions via AppDomain handler.",
    "LogExceptionInitializations": false,
    "LogExceptionInitializations_Description": "Logs out any exceptions being initialized, even before they are thrown or ignored.",
    "LogSqlQueryInitializations": false,
    "LogSqlQueries_Description": "Logs out any sql queries being initialized, even before they are executed or ignored.",
    "LogThreadStarts": false,
    "LogThreadStarts_Description": "Logs who starts threads.",
    "IgnoreLoggerLogLevel": false,
    "IgnoreLoggerLogLevel_Description": "Each logger has a log level, and when logging below that level it won't be logged. That behavior can be ignored to a certain extend. Set to true for FYLS behavior, not recommended though.",
    "DebugLogLevelSetters": false,
    "DebugLogLevelSetters_Description": "Log if a loggers log level changed and by whom.",
    "SkipOriginalLoggers": true,
    "SkipOriginalLoggers_Description": "If true, the original (HBS based) loggers and therefore their appenders and log files will be skipped.",
    "IgnoreSkipForLoggers": [
      "ModTek"
    ],
    "IgnoreSkipForLoggers_Description": "Loggers defined here will never be skipped, meaning their log files will still be separately available.",
    "ModTekLogFormatting": {
      "IndentNewLines": true,
      "IndentNewLines_Description": "If a log message with newlines inside is being logged, prefix every line with a tab character.",
      "NormalizeNewLines": true,
      "NormalizeNewLines_Description": "Makes sure all newline characters ([\\r\\n]) are converted to the OS preferred newline style.",
      "UseAbsoluteTime": false,
      "UseAbsoluteTime_Description": "Use the absolute time format instead of the relative time format. Absolute time is useful when using mods that do not use HBS logging and use absolute time for their logging.",
      "FormatStartupTime_Description": "Runs through string.Format, arguments in order are: Hours, Minutes, Seconds, Milliseconds.",
      "FormatAbsoluteTimeUseUtc": true,
      "FormatAbsoluteTimeUseUtc_Description": "Use UTC instead of local time.",
      "FormatAbsoluteTime_Description": "Runs through `DateTimeOffset.ToString`.",
      "FormatLine_Description": "Arguments in order are: logger name, log level, message, (exception or location).",
      "FormatException_Description": "The only argument is the exception converted to a string.",
      "FormatLocation_Description": "Arguments in order are: DeclaringType of the caller, method name of the caller",
      "FormatStartupTime": "{1:D2}:{2:D2}.{3:D3}",
      "FormatAbsoluteTime": "HH:mm:ss.fff",
      "FormatLine": "[{1}] {2}{3}",
      "FormatException": ": {0}",
      "FormatLocation": ""
    },
    "BattleTechLogFormatting": {
      "IndentNewLines": true,
      "IndentNewLines_Description": "If a log message with newlines inside is being logged, prefix every line with a tab character.",
      "NormalizeNewLines": true,
      "NormalizeNewLines_Description": "Makes sure all newline characters ([\\r\\n]) are converted to the OS preferred newline style.",
      "UseAbsoluteTime": true,
      "UseAbsoluteTime_Description": "Use the absolute time format instead of the relative time format. Absolute time is useful when using mods that do not use HBS logging and use absolute time for their logging.",
      "FormatStartupTime_Description": "Runs through string.Format, arguments in order are: Hours, Minutes, Seconds, Milliseconds.",
      "FormatAbsoluteTimeUseUtc": true,
      "FormatAbsoluteTimeUseUtc_Description": "Use UTC instead of local time.",
      "FormatAbsoluteTime_Description": "Runs through `DateTimeOffset.ToString`.",
      "FormatLine_Description": "Arguments in order are: logger name, log level, message, (exception or location).",
      "FormatException_Description": "The only argument is the exception converted to a string.",
      "FormatLocation_Description": "Arguments in order are: DeclaringType of the caller, method name of the caller",
      "FormatStartupTime": "{1:D2}:{2:D2}.{3:D3}",
      "FormatAbsoluteTime": "HH:mm:ss.fff",
      "FormatLine": "{0} [{1}] {2}{3}",
      "FormatException": ": {0}",
      "FormatLocation": ""
    }
  },
  "Profiling": {
    "Enabled": false,
    "Enabled_Description": "Enable or disable profiling, recommended to stay off as it saves a lot of performance and avoids instability. Based on harmony patching and comes with all its flaws and issues.  If you want more detailed profiling use dotTrace instead, it needs to start the game, so use steam_appid.txt .",
    "UseUnityProfilerIfSupported": true,
    "UseUnityProfilerIfSupported_Description": "If running BT in a development player, uses CustomSampler to add labels to all target methods (still using harmony patches for that). Make those appear in the unity editor profiler timeline and hierarchy.  Use the development build of the unity player (version 2018.4.2f1), properly set it up (PlayerDll+MonoEdgeDll+boot.config) and then run the unity editor on an empty project to open the profiler and select the WindowPlayer once BT runs.",
    "UnityProfilerMaxMemory": 1073741824,
    "UnityProfilerMaxMemory_Description": "256 MB crashes when loading an RT campaign, lets hope 1G is enough.",
    "ModTekProfiler": {
      "Enabled": true,
      "Enabled_Description": "Use the a custom made profiler to collect and display stats in log files.",
      "DumpWhenFrameTimeDeltaLargerThan": 0.0333333351,
      "DumpWhenFrameTimeDeltaLargerThan_Description": "Dump profiler stats if a frame takes longer than the specified amount (in seconds). Dumping happens regardless if any method was actually profiled during the last frame.",
      "StackTraceEnabled": false,
      "StackTraceEnabled_Description": "Use StackTraces to figure out the callers of methods already identified as running slow (this is not for drilling down!). Enabling stack traces will make the game extremely slow and should only be used to debug very specific use cases with very narrow scoped method filters. Really, it will be slow, instead of 10% overhead it will be 5000%. Better use the unity development player.",
      "StackTraceMaxFrameCount": 5,
      "StackTraceMaxFrameCount_Description": "Defines the maximum number of frames to go back on a stack trace."
    },
    "RecursiveDepthToFindCalleesBelowFilteredMethods": 5,
    "RecursiveDepthToFindCalleesBelowFilteredMethods_Description": "Drill down on methods that are currently being filtered. Might corrupt or crash the game if harmony has trouble with patching. Set to 0 to disable.",
    "BlacklistedAssemblyNamePattern": "^(mscorlib|System(\\..*)?|ManagedBass)$",
    "BlacklistedAssemblyNames_Description": "A pattern of assemblies to always ignore. Uses Regex. System assemblies can be profiled but the overhead is quite high.",
    "CoverCoroutines": true,
    "CoverCoroutines_Description": "Enable profiling stats for Unity Coroutines, should be relatively safe as long as no other patch interferes.",
    "BlacklistedTypeNamePattern": "^(UIWidgets\\.ListViewBase|UnityEngine\\.Object|GravityMatters\\.GravityMatters.*|BattleTech\\.Save\\.SaveGameStructure\\.SaveRejectListManager|MonthlyTechandMoraleAdjustment.*Patch)$",
    "BlacklistedTypeNamePattern_Description": "A pattern of types to always ignore. Uses Regex. Mostly used to avoid crashes and state corruption triggered by Harmony doing weird stuff during patching.",
    "Filters": [
      {
        "Enabled": true,
        "Name": "FixedUpdate",
        "ParameterTypeNames": [],
        "ReturnTypeName": "System.Void",
        "ClassTypeName": null,
        "SubClassOfTypeName": "UnityEngine.MonoBehaviour",
        "AssemblyName": null
      },
      {
        "Enabled": true,
        "Name": "Update",
        "ParameterTypeNames": [],
        "ReturnTypeName": "System.Void",
        "ClassTypeName": null,
        "SubClassOfTypeName": "UnityEngine.MonoBehaviour",
        "AssemblyName": null
      },
      {
        "Enabled": true,
        "Name": "LateUpdate",
        "ParameterTypeNames": [],
        "ReturnTypeName": "System.Void",
        "ClassTypeName": null,
        "SubClassOfTypeName": "UnityEngine.MonoBehaviour",
        "AssemblyName": null
      },
      {
        "Enabled": true,
        "Name": "Start",
        "ParameterTypeNames": [],
        "ReturnTypeName": null,
        "ClassTypeName": null,
        "SubClassOfTypeName": "UnityEngine.MonoBehaviour",
        "AssemblyName": null
      },
      {
        "Enabled": true,
        "Name": "Awake",
        "ParameterTypeNames": [],
        "ReturnTypeName": "System.Void",
        "ClassTypeName": null,
        "SubClassOfTypeName": "UnityEngine.MonoBehaviour",
        "AssemblyName": null
      },
      {
        "Enabled": false,
        "Name": "op_Equality",
        "ParameterTypeNames": null,
        "ReturnTypeName": null,
        "ClassTypeName": "UnityEngine.Object",
        "SubClassOfTypeName": null,
        "AssemblyName": null
      },
      {
        "Enabled": false,
        "Name": "op_Inequality",
        "ParameterTypeNames": null,
        "ReturnTypeName": null,
        "ClassTypeName": "UnityEngine.Object",
        "SubClassOfTypeName": null,
        "AssemblyName": null
      },
      {
        "Enabled": true,
        "Name": "Update",
        "ParameterTypeNames": [],
        "ReturnTypeName": "System.Void",
        "ClassTypeName": null,
        "SubClassOfTypeName": null,
        "AssemblyName": "Assembly-CSharp"
      },
      {
        "Enabled": true,
        "Name": "Update",
        "ParameterTypeNames": [
          "System.Single"
        ],
        "ReturnTypeName": "System.Void",
        "ClassTypeName": null,
        "SubClassOfTypeName": null,
        "AssemblyName": "Assembly-CSharp"
      },
      {
        "Enabled": true,
        "Name": "FromJSON",
        "ParameterTypeNames": null,
        "ReturnTypeName": null,
        "ClassTypeName": null,
        "SubClassOfTypeName": null,
        "AssemblyName": "Assembly-CSharp"
      },
      {
        "Enabled": true,
        "Name": "OnDayPassed",
        "ParameterTypeNames": null,
        "ReturnTypeName": null,
        "ClassTypeName": null,
        "SubClassOfTypeName": null,
        "AssemblyName": "Assembly-CSharp"
      }
    ],
    "Filters_Description": "Only matching methods and any related harmony patches are profiled. Not compatible with everything and skips some types of methods by default. Uses harmony itself to patch methods with pre/post methods, see harmony summary dump."
  }
}